server:
  port: 2189

spring:
  application:
     name: zuul-gateway

eureka:
  client:
    service-url:
      defaultZone: http://eureka:eureka0510@localhost:2188/eureka/

security:
#是否需要校验验证码
  capcha: false
#  user:
#    password: user  # 直接登录时的密码
#    ignored: /
#    sessions: never   # session策略
#    oauth2:
#      sso:
#        loginPath: /login   # 登录路径
#      client:
#        clientId: testclientId
#        clientSecret: testclientSecret
#        accessTokenUri: https://github.com/login/oauth/access_token
#        userAuthorizationUri: https://github.com/login/oauth/authorize
#      resource:
#        userInfoUri: https://api.github.com/user
#        preferTokenInfo: false
  sessions: stateless
  oauth2:
    client:
      client-id: ENC(eZLNwFxeSKENBh1pu/M/rMMB76nxo/RLhWSaSLHa8+0=)
      client-secret: ENC(sKbpJGHz9JZmdydv1WOyAYjyXm2irxc0xYqvQ6VpF31uEw/FVNxYeA==)
    resource:
      loadBalanced: true
      token-info-uri: authentic-service/oauth/check-token #由资源服务器用来解码访问令牌
      service-id: authentic-service
      jwt:
         #key-uri: ${security.auth.server}/oauth/token_key #使用JWT令牌，RSA公开密钥可以用于令牌验证
         key-value: ENC(fmVD9Jt6YXP9Q+KBPU8/1cWgKn5WhlGuD10SzFADNz4=)
#security:
#  validate:
#    code: false
#  sessions: stateless
#  oauth2:
#    resource:
#      loadBalanced: true
#      user-info-uri: http://system-auth-server/user
#      prefer-token-info: false
#      service-id: system-gateway-server
# 上述做法将权限认证和网关解耦、建议采用RSA加密验证方式

urls:
  collects:
    - /auth/**
    - /error
    - /**/*.css
    - /**/*.png
    - /info
    - /health
    - /metrics/**
    - /loggers/**
    - /mobile/token



zuulFilter:
  permissionFilter: false
  errorFilter: true
  loggerFilter: true
  rules:
    whiteurl: /authentic-service/login,/test
management:
  security:
    enabled: false

zuul:
  ribbon:
    eager-load:
      enabled: true #开启Ribbon的饥饿加载模式
      clients: authentic-service #指定需要饥饿加载的客户端名称、服务名
  ignoredServices: '*'
  host:
    connect-timeout-millis: 30000
    socket-timeout-millis: 30000
  routes:
    authentic-service:
      path: /auth/**
      serviceId: authentic-service
      stripPrefix: true
      sensitiveHeaders:
#    business-admin-server:
#      path: /admin/**
#      serviceId: business-admin-server
#      stripPrefix: true
#      sensitiveHeaders:
#    business-pay-server:
#      path: /pay/**
#      serviceId: business-pay-server
#      stripPrefix: true
#      sensitiveHeaders:
  ratelimit:
    key-prefix: business-ratelimite
    enabled: true
    repository: REDIS
    behind-proxy: true
    policies:
      business-admin-server:
        limit: 100
        quota: 100
        refresh-interval: 3 #3秒内允许300个访问，平均每个请求2秒，并且要求总请求时间小于2400秒


#####################################################################################################
# redis配置
redis:
  # Redis数据库索引（默认为0）
  database: 0
  # Redis服务器地址
  host: 127.0.0.1
  # Redis服务器连接端口
  port: 6379
  # Redis服务器连接密码（默认为空）
  password: auth@#redis
  jedis:
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
      max-wait: 1
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池中的最小空闲连接
      min-idle: 0
  # 连接超时时间（毫秒）
  timeout: 1000

#################redis哨兵设置#################
# Redis服务器master的名字
#  sentinel:
#    master: master8026
#    # redis-sentinel的配置地址和端口
#    nodes: 10.189.80.25:26379,10.189.80.26:26379,10.189.80.27:26378
#####################################################################################################


#####################################################################################################

# 打印日志 trace
logging:
  level:
    root: info
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    com.springms: DEBUG
#####################################################################################################

